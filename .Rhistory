length(unique(nodes$id))
length(unique(routes_file$from))
routes <-routes_file
names(routes)
save.image("C:/Users/Luis/Desktop/Business Network Analytics/Assignment/flight_routes/workspace.RData")
library(igraph)
testnet <- graph.data.frame(routes)
V(testnet)
E(testnet)
nrow(unique(routes[,c("from", "to")]))
nrow(routes)
plot(testnet)
plot.igraph(testnet)
head(routes)
a <- as.data.frame(table(unique(routes)$from))
head8a)
head(a)
summary(a)
a[a$Freq == 239,]
nrow(a)
nrow(a[a$Freq >= 3,])
nrow(a[a$Freq > 3,])
nrow(a[a$Freq >= 2,])
nrow(a[a$Freq >= 1,])
hist(a)
hist(a$Freq)
b <- a[a$Freq < 20,]
hist(b$Freq)
b <- a[a$Freq < 10,]
hist(b$Freq)
routes_reduced <- routes[routes$from  == v2$Var1,]
routes_reduced <- routes[routes$from  == b$Var1,]
install.packages(prodlim)
install.packages("prodlim")
library(prodlim)
c <- row.match(b[1,], cm[,])
c <- row.match(b[1,], cm[1,])
v1 <- a
v2 <- b
rm(a,b)
routes_reduced
head(v2)
routes_reduced <- routes[routes$from  == v2$Var1,]
routes_reduced <- routes
routes_reduced$Freq <- routes_reduced$Freq[match(routes_reduced$from, v1$Var1)]
head(routes_reduced)
nrow(routes_reduced)
library(igraph)
routes_graph <- graph.data.frame(routes)
head(routes_graph)
v(routes_graph)
V(routes_graph)
E(routes_graph)
head(v1)
V(routes_reduced)$freq = node$Freq[match(V(routes_reduced)$from, v1$Var1)]
V(routes_reduced)$freq = v1$Freq[match(V(routes_reduced)$from, v1$Var1)]
V(routes_graph)$freq = v1$Freq[match(V(routes_graph)$from, v1$Var1)]
list.vertex.attributes(routes_graph)
routes_graph
head(v1)
routes_graph <- graph.data.frame(routes)
list.vertex.attributes(routes_graph)
v(routes_graph$name)
V(routes_graph$name)
V(routes_graph)$name
V(routes_graph)$from
V(routes_graph)$to
plot(routes_graph)
> V(routes_graph)$freq = v1$Freq[match(V(routes_graph)$from, v1$Var1)]
V(routes_graph)$freq = v1$Freq[match(V(routes_graph)$from, v1$Var1)]
V(routes_graph)$name
list.edge.attributes(routes_graph)
get.edge.attributes()
get.edge.attribute()
head(v2)
nrow(v1)
nrow(v2)
v2 <- v1[v1$Freq > 3,]
nrow(v2)
routes_reduced <- routes[match(v2$Var1, routes$from, nomatch=0),]
nrow(routes_reduced)
head(routes_reduced)
head(routes)
names(routes_reduced)
my_file <- routes_file
rm(routes_file)
head(routes_reduced)
colnames(routes_reduced)
test <- routes[routes$frpm == "FRA" & routes$to == "BER"]
head(test)
test <- routes[routes$frpm == "FRA" & routes$to == "BER",]
head(test)
test <- routes[routes$frpm == "FRA" & routes$to == "ZRH",]
head(test)
test <- routes[routes$frpm == "AAE" & routes$to == "ALG",]
head(test)
test <- routes[routes$from == "FRA" & routes$to == "BER",]
head(test)
test <- routes[routes$from == "FRA" & routes$to == "ZRH",]
head(test)
test <- routes[routes$from == "FRA" & routes$to == "LHR",]
head(test)
head(routes_reduced)
head(v2)
routes_reduced <- routes[match(v2$Var1, routes$from),]
routes_reduced <- routes[v2$Var1 == routes$from,]
head(routes_reduced)
routes_reduced <- merge(routes[,"from"], v2[, "Var1"], by = 1, sort = FALSE)
head(routes_reduced)
routes_reduced <- merge(routes[,"from", "to"], v2[, "Var1"], by = 1, sort = FALSE)
routes_reduced <- merge(routes[,], v2[, "Var1"], by = 1, sort = FALSE)
head(routes_reduced)
summary(routes_reduced)
count(routes_reduced$from)
f <- factor(routes_reduced$from)
xtabs(to~from, routes_reduced)
library(dplyr)
set.seed(1)
routes_reduced%>%
group_by(from)%>%
summarise()
tapply(from, to, sum)
help(tapply)
tapply(routes_reduced, "from", sum)
tapply(routes_reduced, routes_reduced$from, sum)
tapply(routes_reduced$from, c(routes_reduced$to), length)
tapply(routes_reduced$from, routes_reduced$to, length)
nrow(unique(routes_reduced[,c("from", "to")]))
v3 <- v1[v1$Freq > 10,]
nrow(v3)
routes_reduced_v2 <- merge(routes[,], v3[, "Var1"], by = 1, sort = FALSE)
test <- routes[routes$from == "AAE" & routes$to == "ALG",]
test
test <- routes_reduced[routes_reduced$from == "AAE" & routes_reduced$to == "ALG",]
test
v4 <- as.data.frame(table(unique((routes)$from,(routes)$to))
v4 <- as.data.frame(table(unique((routes)$from,(routes)$to)))
head(v4)
head(v1)
v4 <- as.data.frame(table(unique(routes$from,routes$to))
)
head(v4)
help(merge)
join <- merge(routes, v2, by.x = "from", by.y = "Var1")
head(join)
nrow(join[join$Freq == 1])
nrow(join[join$Freq > 1])
class(join$Freq)
nrow(join[join$Freq > 1])
head(join[join$Freq > 1])
nrow(join[join$Freq > 1],)
head(join[join$Freq > 1],)
head(join[join$Freq > 1,])
nrow(join[join$Freq > 1,])
nrow(join[join$Freq > 2,])
nrow(join[join$Freq > "2",])
nrow(join[join$Freq == "1",])
nrow(join[join$Freq == "2",])
nrow(join[join$Freq == "3",])
nrow(join[join$Freq == "4",])
rm(test,v4)
rm(f)
rm(join)
library(plyr)
a <- ddply(routes,.(routes$from,routes$to),nrow)
head(a)
routes[routes$from == "AAE" & routes$to == "LYS",]
routes[routes$from == "AAE" & routes$to == "MRS",]
rm(routes_reduced_v2)
routes_reduced <- merge(routes[,], v3[, "Var1"], by = 1, sort = FALSE)
head(sort(a))
help(sort)
nrow(a[a$V1 > "1"])
nrow(a[a$V1 > "1",])
nrow(a)
nrow(a[a$V1 > "10",])
nrow(a[a$V1 > "20",])
nrow(a[a$V1 > "40",])
nrow(a[a$V1 > "60",])
nrow(a[a$V1 > "100",])
nrow(a[a$V1 == "10",])
a[a$V1 == "10",]
a[a$V1 == "20",]
nrow(a[a$V1 > "99",])
nrow(a[a$V1 > "80",])
nrow(a[a$V1 > "90",])
nrow(a[a$V1 > "85",])
a[a$V1 > "85",]
nrow(a[a$V1 > 85,])
nrow(a[a$V1 > 20,])
nrow(a[a$V1 > 18,])
a[a$V1 > 18,]
nrow(a[a$V1 > 10,])
a[a$V1 > 10,]
head(a)
b <- merge(routes_reduced[,], v3[,], by = 1, sort = FALSE)
head(b)
nrow(b[b$Freq > 10,])
nrow(b[b$Freq > "10",])
class(b$Freq)
nrow(b[b$Freq == "10",])
nrow(b[b$Freq == "17",])
nrow(b[b$Freq == "15",])
nrow(b[b$Freq == "19",])
nrow(b[b$Freq == "20",])
head(nrow(b[b$Freq == "20",]),20)
head(b[b$Freq == "20",],20)
head(a)
b <- merge(routes_reduced, a, by.x = "from", by.y = "routes$from", by.x = "from", by.y = "routes$to")
names(a) <- c("from", "to", "V1")
head(a)
b <- merge(routes_reduced, a, by=c("from","to"))
head(b)
nrow(b[b$V1 > 20])
nrow(b[b$V1 > "20"])
nrow(b[b$V1 > 20,])
nrow(b[b$V1 > 19,])
b[b$V1 > 19,]
temp <- routes
v2 <- v1[v1$Freq > 10,]
rm(v3)
routes <- merge(temp[,], v2[, "Var1"], by = 1, sort = FALSE)
head(routes_reduced)
head(routes)
rm(routes_reduced)
graph_routes <- graph.data.frame(routes)
V(graph_routes)
E(graph_routes)
plot(graph_routes)
plot.igraph(graph_routes)
degree(graph_routes)
sort(degree(graph_routes))
sort(degree(graph_routes), descendent=TRUE)
sort(degree(graph_routes), decreasing =TRUE)
betweenness(graph_routes)
sort(betweenness(graph_routes), decreasing =TRUE)
closeness(graph_routes)
sort(closeness(graph_routes), decreasing =TRUE)
mean(degree(graph_routes))
routes[routes$from == "ZRH" & routes$to == "FRA"]
routes[routes$from == "ZRH" & routes$to == "FRA",]
new <- aggregate(routes[,3], routes[,-3], sum)
new <- aggregate(routes[,2], routes[,-2], sum)
help(aggregate)
head(routes[,3])
head(routes[,2])
head(routes[,1])
head(routes)
head(routes[,-2])
x <- routes[, lapply(.SD, sum, na.rm=TRUE), by=c("from","to")]
x <- routes[, lapply(.SD, sum, na.rm=TRUE), by=from]
x <- cast(routes, from+to ~ sum)
x <- aggregate(numeric(nrow(routes)), routes[c("from", "to")], sum)
head(x)
x <- aggregate(nrow(routes), routes[c("from", "to")], sum)
x <- aggregate(numeric(nrow(routes)), routes[c("from", "to")], length)
head(x)
length(x)
nrow(x)
x <- aggregate(numeric(nrow(temp)), temp[c("from", "to")], length)
nrow(x)
head(x)
library(plyr)
y <- ddply(temp,.(temp$from,routes$to),nrow)
names(y) <- c("from", "to", "weight")
z <- merge(temp, y, by=c("from","to"))
head(z)
nrow(z)
head(y)
y <- ddply(temp,.(temp$from,routes$to),nrow, rm.na=TRUE)
rm(y,z)
y <- ddply(temp,.(temp$from,temp$to),nrow)
head(y)
library(igraph)
graph_new <- graph.data.frame(x)
list.edge.attributes(graph_new)
head(x)
names(x) <- c("from","to","weight")
graph_new <- graph.data.frame(x)
list.edge.attributes(graph_new)
plot(graph_new)
plot(graph_new, label=NA)
gr <- graph.data.frame(x, weighted=TRUE)
help("graph")
help("graph.data.frame")
plot.igraph(graph_new,vertex.label=NA,layout=layout.fruchterman.reingold, edge.color="black",edge.width=E(graph_new)$weight)
plot.igraph(graph_new,vertex.label=NA, edge.color="black",edge.width=E(graph_new)$weight)
plot.igraph(graph_new,vertex.label=NA,layout=layout.fruchterman.reingold,edge.width=E(graph_new)$weight)
plot.igraph(graph_new,vertex.label=NA,layout=layout.kamada.kawai,edge.width=E(graph_new)$weight)
g=graph.edgelist(x[,1:2])
list.edge.attributes(graph_new)
plot(graph_new,layout=layout.fruchterman.reingold,edge.width=E(graph_new)$weight/2)
plot(graph_new,vertex.size=1,edge.width=E(graph_new)$weight/2)
plot(graph_new,vertex.label=NA, vertex.size=1, vertex.color="red",edge.color="black",edge.width=E(graph_new)$weight/2)
plot(graph_new,vertex.label=NA, vertex.size=1, vertex.color="red",edge.color="blue",edge.width=E(graph_new)$weight/2)
plot(graph_new,vertex.label=NA, vertex.size=1, vertex.color="red",edge.color="dark blue",edge.width=E(graph_new)$weight/2)
rm(a, b, routes, temp, v1, v2, x, y)
rm(graph_new, graph_routes, routes_graph, testnet)
temp <- routes_file
temp <- my_file
routes <- aggregate(numeric(nrow(temp)), temp[c("from", "to")], length)
library(igraph)
names(routes) <- c("from", "to", "weight")
net <- graph.data.frame(routes)
cut_off <- mean(routes$weight)
net.sp <- delete.edges(net, E(net)[weight>cut_off])
deg <- degree(net, mode="all")
deg.dist <- degree_distribution(net, cumulative=T, mode="all")
close <- closeness(net, mode="all")
bet <- betweenness(net, directed=T)
e_bet <- edge_betweenness(net, directed=T)
hs <- hub_score(net)$vector
as <- authority_score(net)$vector
net.sym <- as.undirected(net, mode= "collapse",
edge.attr.comb=list(weight="sum", "ignore"))
library(igraph)
V(net)$community <- cfg$membership
SCC <- clusters(net, mode="strong")
SCC
V(net)$color <- rainbow(SCC$no)[SCC$membership]
plot.igraph(net, mark.groups = split(1:vcount(net), SCC$membership))
plot.igraph(net, vertex.labels=NA, mark.groups = split(1:vcount(net), SCC$membership))
SCC$membership
help(clusters)
SCC <- clusters(net, mode="weak")
V(net)$color <- rainbow(SCC$no)[SCC$membership]
plot.igraph(net, mark.groups = split(1:vcount(net), SCC$membership))
plot.igraph(net, vertex.label=NA, edge.arrow.size=.4, edge.color="black", edge.width=E(net)$weight/10, edge.arrow.width=0.5, edge.curved=.1, mark.groups = split(1:vcount(net), SCC$membership))
plot.igraph(net, vertex.size=4, vertex.label=NA, edge.arrow.size=.4, edge.color="black", edge.width=E(net)$weight/10, edge.arrow.width=0.5, edge.curved=.1, mark.groups = split(1:vcount(net), SCC$membership))
plot.igraph(net, vertex.size=6, vertex.label=NA, edge.arrow.size=.4, edge.color="black", edge.width=E(net)$weight/10, edge.arrow.width=0.5, edge.curved=.1, mark.groups = split(1:vcount(net), SCC$membership))
plot.igraph(net, vertex.size=6, vertex.label=NA, edge.arrow.size=.4, edge.color="black", edge.width=E(net)$weight/10, edge.arrow.width=0.5, edge.curved=.1, mark.groups = split(1:vcount(net), SCC$membership), main="Components")
assortativity_nominal(net, V(net)$from, directed=T)
assortativity_nominal(net, V(net)$from.to, directed=T)
assortativity_nominal(net, V(net)$from.to, directed=F)
assortativity_nominal(net, V(net)$weight, directed=F)
hist(routes$weight)
summary(routes$weight)
routes_new <- routes
routes_new$type <- as.factor(routes_new$to)
routes_new$type <- as.factor(routes_new$weight)
levels(routes_new$type) <- c("Large","Small", "Periferic")
rm(routes_new)
routes_new <- routes
x <- ifelse(routes_new$weight < 5, "periferic", ifelse((routes_new$weight>=5) & (routes_new$weight<10),"small", "large"))
routes_new$type <- x
head(routes_new)
head(routes_new[routes_new$weight > 10])
head(routes_new[routes_new$weight > 10,])
head(routes_new[routes_new$weight > 5,])
net2 <- graph.data.frame(routes_new)
assortativity_nominal(net2, V(net2)$type, directed=T)
assortativity_nominal(net2, V(net2)$type)
list.edge.attributes(net2)
assortativity(net2, V(net2)$type, directed=T)
assortativity_nominal(net,as.numeric(as.factor(V(net)$from)))
assortativity_nominal(net2,as.numeric(as.factor(V(net2)$type)))
assortativity_nominal(net2,as.numeric(as.factor(V(net2)$weight)))
assortativity_degree(net, directed=T)
routes[routes$from = NA]
routes[routes$from == NA]
routes[routes$from == "NA"]
routes[routes$from == "NA",]
routes[routes$to == "NA",]
routes[routes$to == "na",]
routes[routes$to == "n/a",]
routes[routes$to == "null",]
routes[na.rm=TRUE)]
assortativity_nominal(net2, as.factor(net2$type), directed=T)
SCC
sort(SCC, decreasing=TRUE)
class(SCC)
sort(SCC[,], decreasing=TRUE)
sort(SCC[], decreasing=TRUE)
scc[1:20]
SCC[1:20]
sort(SCC[,1], decreasing=TRUE)
sort(SCC[1,], decreasing=TRUE)
sort(SCC[1,1], decreasing=TRUE)
SCC$membership
sort(SCC$membership)[1:20]
sort(SCC$membership, decreasing=TRUE)[1:20]
sort(SCC$membership, decreasing=TRUE)[1:30]
gs <- induced.subgraph(net, SCC$membership==order(-SCC$csize)[1])
library(igraph)
gs <- induced.subgraph(net, SCC$membership==order(-SCC$csize)[1])
plot(gs)
plot(gs, vertex.size=as*30, vertex.color="light blue",vertex.label=NA, edge.arrow.size=.4, edge.color="black",edge.width=E(net)$weight/10,edge.arrow.width=0.5, edge.curved=.1)
plot(gs, vertex.size=as*30, vertex.color="light blue",vertex.label=NA, edge.arrow.size=.4, edge.color="black",edge.arrow.width=0.5, edge.curved=.1)
plot(gs, vertex.size=as*30, vertex.color="light blue",vertex.label=NA, edge.arrow.size=.4, edge.color="black",edge.width=0.5,edge.arrow.width=0.5, edge.curved=.1)
plot(gs, vertex.size=as*30, vertex.color="light blue",vertex.label=NA, edge.arrow.size=.4, edge.color="gray",edge.width=0.2,edge.arrow.width=0.2, edge.curved=.1)
plot(gs, vertex.size=as*30, vertex.color="light blue",vertex.label=NA, edge.arrow.size=.4, edge.color="yellow",edge.width=0.2,edge.arrow.width=0.2, edge.curved=.1, main="Network Greater Component")
plot(gs, vertex.size=as*30, vertex.color="light blue",vertex.label=NA, edge.arrow.size=.4, edge.color="green",edge.width=0.2,edge.arrow.width=0.2, edge.curved=.1, main="Network Greater Component")
SCC_weak <- clusters(net, mode="weak")
weak <- net
V(weak)$color <- rainbow(SCC_new$no)[SCC_new$membership]
V(weak)$color <- rainbow(SCC_weak$no)[SCC_weak$membership]
plot.igraph(weak, mark.groups = split(1:vcount(weak), SCC_weak$membership))
sort(SCC_weak$membership, decreasing=TRUE)[1:30]
rm(SCC_weak, weak)
head(temp)
head(routes)
routes[routes$from=="ZRH" & routes$to=="FRA",]
routes[temp$from=="ZRH" & temp$to=="FRA",]
temp[temp$from=="ZRH" & temp$to=="FRA",]
hist(routes$weight)
hist(routes$weight, main = "Histogram of attribute weight")
hist(routes$weight, main = "Histogram of attribute weight", x="weight")
help(hist)
hist(routes$weight, main = "Histogram of attribute weight", xlab="weight")
mean(routes$weight)
median(routes$weight)
sd(routes$weight)
library(igraph)
sort(degree(new, mode="in"), decreasing=TRUE)[1:20]
sort(degree(new, mode="all"), decreasing=TRUE)[1:20]
sort(degree(net, mode="in"), decreasing=TRUE)[1:20]
sort(degree(net, mode="out"), decreasing=TRUE)[1:20]
help(degree)
head(routes)
head(temp)
a <- graph.data.frame(temp)
sort(degree(a, mode="all"), decreasing=TRUE)[1:20]
sort(degree(a, mode="in"), decreasing=TRUE)[1:20]
sort(degree(a, mode="out"), decreasing=TRUE)[1:20]
degree_distribution(net, cumulative=T, mode="all")
plot( x=0:max(deg), y=degree_distribution(net, cumulative=T, mode="all"), pch=19, cex=1.2)
plot( x=0:max(deg), y=degree_distribution(a, cumulative=T, mode="all"), pch=19, cex=1.2)
plot(y=degree_distribution(a, cumulative=T, mode="all"), pch=19, cex=1.2)
plot( x=0:max(degree(a, mode="all")), y=degree_distribution(a, cumulative=T, mode="all"), pch=19, cex=1.2)
plot( x=0:max(deg), y=degree_distribution(net, cumulative=T, mode="all"), pch=19, cex=1.2)
plot( x=0:max(degree(a, mode="all")), y=degree_distribution(a, cumulative=T, mode="all"), pch=19, cex=1.2)
help("centr_eigen")
betweenness(net, directed=T)
library(igraph)
betweenness(net, directed=T)
sort(bet, decreasing=TRUE)
sort(betweenness(net, directed=T, weights=NA), decreasing=TRUE)
sort(betweenness(net, directed=T, weights=NA), decreasing=TRUE)[1:20]
close <- closeness(net, mode="all", weights=NA)
sort(close, decreasing=TRUE)[1:20]
sort(close, decreasing=FALSE)[1:20]
eigen_centrality(net, directed=T, weights=NA)
sort(eigen_centrality(net, directed=T, weights=NA)$vector, decreasing=TRUE)[1:20]
routes[routes$from=="AOS",]
routes[routes$to=="AOS",]
routes[routes$to=="ACU",]
hub_score(net, weights=NA)
sort(hub_score(net, weights=NA),decreasing=TRUE)[1:20]
sort(hub_score(net, weights=NA)$vector,decreasing=TRUE)[1:20]
sort(SCC$membership, decreasing=TRUE)[1:30]
nrow(E(net))
length(E(net)
)
length(V(net))
3425-28
routes[routes$from=="BLD",]
routes[routes$from=="GCW",]
routes[routes$from=="GCW" & routes$to=="OPO",]
routes[routes$from=="ZRH" & routes$to=="OPO",]
routes[routes$from=="OPO" & routes$to=="ZRH",]
centr_degree(net, mode="in", normalized=T)
average.path.length(net)
diameter(net)
close
library(igraph)
plot.igraph(net, mark.groups = split(1:vcount(net), SCC$membership))
plot.igraph(net, mark.groups = split(1:vcount(net), SCC$membership), vertex.label=NA, edge.curved=.1)
plot(gs, vertex.size=as*30, vertex.color="light blue",vertex.label=NA, edge.arrow.size=.4, edge.color="black",edge.width=E(net)$weight/10,edge.arrow.width=0.5, edge.curved=.1)
net2 <- net
V(net2)$color = "black"
v(net2)[articulation.points(net2)]$color = "red"
V(net2)[articulation.points(net2)]$color = "red"
plot(net2)
plot.igraph(net2, vertex.label=NA, edge.curved=.1)
V(net2)[articulation.points(net2)]$color
articulation.points(net2)
sort(articulation.points(net2), decreasing=TRUE)
articulation.points(net2)[1:362]
class(articulation.points(net2))
plot.igraph(net2, vertex.size=3, vertex.label=NA,edge.arrow.width=0.3, edge.width = 0.1, edge.curved=.1)
plot.igraph(net2, vertex.size=3, vertex.label=NA,edge.arrow.width=0.3, edge.color="light blue", edge.width = 0.1, edge.curved=.1)
plot.igraph(net2, vertex.size=3, vertex.label=NA,edge.arrow.width=0.3, edge.color="light blue", edge.width = 0.1, edge.curved=.1, main="Articulation Points")
362/3425
362/3425*100
class(gs)
summary(gs)
plot.igraph(gs, vertex.size=3, vertex.label=NA,edge.arrow.width=0.3, edge.color="light blue", edge.width = 0.1, edge.curved=.1, main="Articulation Points")
articulation.points(gs)
gs2 <- gs
V(gs2)$color = "black"
articulation.points(gs2)
358/3397*100
V(gs2)[articulation.points(gs2)]$color = "red"
plot.igraph(gs2, vertex.size=3, vertex.label=NA,edge.arrow.width=0.3, edge.color="light blue", edge.width = 0.1, edge.curved=.1, main="Articulation Points")
V(net)
library(igraph)
V(net)
degree(net, v="ALG")
degree(net, v="ZRH")
betweenness(net, v="ANC")
betweenness(net, v="ZRH")
degree(net, c=("ANC","LAX","CDG","DXB", "FRA", "PEK" , "ORD" , "SEA", "AMS", "YYZ", "IST", "GRU", "LHR", "NRT", "SYD", "SIN", "BNE", "DME", "ATL" , "YUL"))
degree(net, v=c("ANC","LAX","CDG","DXB", "FRA", "PEK" , "ORD" , "SEA", "AMS", "YYZ", "IST", "GRU", "LHR", "NRT", "SYD", "SIN", "BNE", "DME", "ATL" , "YUL"))
degree(net, v=c("FRA","CDG","LHR","AMS", "DXB", "LAX" , "JFK" , "YYZ", "IST", "ORD", "PEK", "MUC", "FCO", "NRT", "EWR", "DOH", "ICN", "ZRH", "MAD" , "IAH"))
degree(a, v=c("FRA","CDG","LHR","AMS", "DXB", "LAX" , "JFK" , "YYZ", "IST", "ORD", "PEK", "MUC", "FCO", "NRT", "EWR", "DOH", "ICN", "ZRH", "MAD" , "IAH"))
hist(deg, breaks=1:vcount(net)-1, main="Histogram of node degree")
plot( x=0:max(deg), y=deg.dist, pch=19, cex=1.2, col="orange",
xlab="Degree", ylab="Cumulative Frequency")
plot( x=0:max(deg), y=deg.dist, pch=19, cex=1.2, col="orange",
xlab="Degree", ylab="Cumulative Frequency", main="Degree Distribution")
diameter(net, directed=T)
diameter(net, directed=T, weights=NA)
